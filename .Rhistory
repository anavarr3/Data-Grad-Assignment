group_by(city, county) |>
summarise(count = n())
# arrange(desc())
purple_line
purple_line <- compliance |>
filter(site_name == "MTA-Purple Line", site_status == "Noncompliance") |>
summarise(count = n())
# arrange(desc())
purple_line
purple_line <- compliance |>
filter(site_name == "MTA-Purple Line", site_status == "Noncompliance") |>
# arrange(desc())
purple_line
purple_line <- compliance |>
filter(site_name == "MTA-Purple Line", site_status == "Noncompliance")
purple_line
purple_line <- compliance |>
filter(site_name == "MTA-Purple Line", site_status == "Noncompliance") |>
group_by(inspection_type, recommended_actions)
purple_line
purple_line <- compliance |>
filter(site_name == "MTA-Purple Line", site_status == "Noncompliance") |>
group_by(inspection_type, recommended_actions) |>
summarise(count =n())
purple_line
purple_line <- compliance |>
filter(site_name == "MTA-Purple Line", site_status == "Noncompliance") |>
group_by(inspection_type, recommended_actions) |>
summarise(desc(count =n()))
purple_line <- compliance |>
filter(site_name == "MTA-Purple Line", site_status == "Noncompliance") |>
group_by(inspection_type, recommended_actions) |>
summarise(count =n()) |>
arrange(desc())
purple_line <- compliance |>
filter(site_name == "MTA-Purple Line", site_status == "Noncompliance") |>
group_by(inspection_type, recommended_actions) |>
summarise(count =n()) |>
arrange(desc(count))
purple_line
purple_line <- compliance |>
filter(site_name == "MTA-Purple Line", site_status == "Noncompliance") |>
group_by(inspection_type) |>
summarise(count =n()) |>
arrange(desc(count))
purple_line
noncompliance <- compliance |>
filter(site_status == "Noncompliance") |>
group_by(site_name) |>
summarise(count = n()) |>
arrange(desc(count))
noncompliance <- compliance |>
filter(site_status == "Noncompliance") |>
group_by(site_name) |>
summarise(count = n()) |>
arrange(desc(count))
noncompliance
#Wowowowowow the Purple Line has over 500 counts -- highest count of all the sites
names <- compliance |>
#  filter(site_name == "MTA-Purple Line") |>
group_by(site_name, site_status) |>
summarise(count =n()) |>
arrange(desc(count))
names
#Wowowowowow the Purple Line has over 500 counts -- highest count of all the sites
names <- compliance |>
#  filter(site_name == "MTA-Purple Line") |>
group_by(site_name) |>
summarise(count =n()) |>
arrange(desc(count))
names
#Here I'm checking if these are just Maryland reports and what the zip codes look like. I used this to better clean the compliance dataframe. Cleaning checklist: change the 00000 zip codes to NA, change the zip code "20619619" to "20619" (I double checked this and it is California, Maryland), change zip code "206 4" to "20674" after grabbing the address from that entry and looking it up.
#Data smells: zip codes: "", "00000", "206 7", "20619619" "33333-3333", Why are they in Illinois?? They are in DC, GA, IL, MD, VA, WV, YY (typo?), and no state available.
#Question: Which zip code has the highest number of compliance reports?
compliance_check <- compliance |>
filter(state == "YY")
#state_zip <- compliance |>
#  group_by(zip, state) |>
#  summarise(count=n()) |>
#  arrange(desc(count))
#state_zip
#Here I'm checking if these are just Maryland reports and what the zip codes look like. I used this to better clean the compliance dataframe. Cleaning checklist: change the 00000 zip codes to NA, change the zip code "20619619" to "20619" (I double checked this and it is California, Maryland), change zip code "206 4" to "20674" after grabbing the address from that entry and looking it up.
#Data smells: zip codes: "", "00000", "206 7", "20619619" "33333-3333", Why are they in Illinois?? They are in DC, GA, IL, MD, VA, WV, YY (typo?), and no state available.
#Question: Which zip code has the highest number of compliance reports?
compliance_check <- compliance |>
filter(state == "YY")
compliance_check
#state_zip <- compliance |>
#  group_by(zip, state) |>
#  summarise(count=n()) |>
#  arrange(desc(count))
#state_zip
View(compliance_counties)
#Here I'm checking if these are just Maryland reports and what the zip codes look like. I used this to better clean the compliance dataframe. Cleaning checklist: change the 00000 zip codes to NA, change the zip code "20619619" to "20619" (I double checked this and it is California, Maryland), change zip code "206 4" to "20674" after grabbing the address from that entry and looking it up.
#Data smells: zip codes: "", "00000", "206 7", "20619619" "33333-3333", Why are they in Illinois?? They are in DC, GA, IL, MD, VA, WV, YY (typo?), and no state available.
#Question: Which zip code has the highest number of compliance reports?
compliance_check <- compliance |>
filter(county == "Outside of Maryland")
compliance_check
#state_zip <- compliance |>
#  group_by(zip, state) |>
#  summarise(count=n()) |>
#  arrange(desc(count))
#state_zip
#Here I'm checking if these are just Maryland reports and what the zip codes look like. I used this to better clean the compliance dataframe. Cleaning checklist: change the 00000 zip codes to NA, change the zip code "20619619" to "20619" (I double checked this and it is California, Maryland), change zip code "206 4" to "20674" after grabbing the address from that entry and looking it up.
#Data smells: zip codes: "", "00000", "206 7", "20619619" "33333-3333", Why are they in Illinois?? They are in DC, GA, IL, MD, VA, WV, YY (typo?), and no state available.
#Question: Which zip code has the highest number of compliance reports?
state_zip <- compliance |>
filter(county == "Outside of Maryland") |>
group_by(zip, county, state,)
state_zip
#state_zip <- compliance |>
#  group_by(zip, state) |>
#  summarise(count=n()) |>
#  arrange(desc(count))
#state_zip
#Here I am cleaning the data. I read it in, cleaned the names, separated the location column into three separate ones that list the city, state and zip code of the complaint, and did a lot of work on the new zip column. I then took away the document and inspection_reason columns because they were empty, but I've been trying to get ahold of the creators of the spreadsheet to see if I can get the data. I'm very interested in the inspection_reason column and was disappointed to see it was completely useless here. The document links are invalid, making that column more or less useless as well.
# I commented out the two lines of code that I used to see if there was any reason to keep the "inspection_reason" column. Unfortunately, it's all NA, so I took it out. I am trying to get a hold of the data.
compliance <- read_csv("data/compliance_dec.csv") |>
clean_names() |>
separate(city_state_zip, into = c("city", "state", "zip"), sep = ",") |>
#group_by(inspection_reason) |>
#summarise(count=n())
mutate(inspection_date = mdy(inspection_date),
zip = str_replace_all(zip, c("-.*$" = "", "20619619" = "20619", "206 4" = "20674")),
zip = str_trim(zip),
zip = coalesce(na_if(zip, ""), na_if(zip, "00000")),
year = year(inspection_date),
month = month(inspection_date),
day = day(inspection_date)) |>
select(-document, -inspection_reason)
compliance
#Here I am cleaning the data. I read it in, cleaned the names, separated the location column into three separate ones that list the city, state and zip code of the complaint, and did a lot of work on the new zip column. I then took away the document and inspection_reason columns because they were empty, but I've been trying to get ahold of the creators of the spreadsheet to see if I can get the data. I'm very interested in the inspection_reason column and was disappointed to see it was completely useless here. The document links are invalid, making that column more or less useless as well.
# I commented out the two lines of code that I used to see if there was any reason to keep the "inspection_reason" column. Unfortunately, it's all NA, so I took it out. I am trying to get a hold of the data.
compliance <- read_csv("data/compliance_dec.csv") |>
clean_names() |>
separate(city_state_zip, into = c("city", "state", "zip"), sep = ",") |>
#group_by(inspection_reason) |>
#summarise(count=n())
mutate(inspection_date = mdy(inspection_date),
zip = str_replace_all(zip, c("-.*$" = "", "20619619" = "20619", "206 4" = "20674")),
zip = str_trim(zip),
zip = coalesce(na_if(zip, ""), na_if(zip, "00000")),
year = year(inspection_date),
month = month(inspection_date, label = TRUE),
day = day(inspection_date)) |>
select(-document, -inspection_reason)
compliance
#Here I'm checking if these are just Maryland reports and what the zip codes look like. I used this to better clean the compliance dataframe. Cleaning checklist: change the 00000 zip codes to NA, change the zip code "20619619" to "20619" (I double checked this and it is California, Maryland), change zip code "206 4" to "20674" after grabbing the address from that entry and looking it up.
#Data smells: zip codes: "", "00000", "206 7", "20619619" "33333-3333", Why are they in Illinois?? They are in DC, GA, IL, MD, VA, WV, YY (typo?), and no state available.
#Question: Which zip code has the highest number of compliance reports?
zip_count <- compliance |>
group_by(zip) |>
summarise(count = n()) |>
arrange(desc(count))
zip_count
state_zip <- compliance |>
filter(county == "Outside of Maryland") |>
group_by(zip, county, state,)
state_zip
compliance_per_year <- compliance |>
filter(site_status == "Noncompliance")
group_by(year) |>
summarise(count = n()) |>
arrange(count)
noncompliance_per_year <- compliance |>
filter(site_status == "Noncompliance") |>
group_by(year) |>
summarise(count = n()) |>
arrange(count)
noncompliance_per_year
noncompliance_per_year <- compliance |>
filter(site_status == "Noncompliance") |>
group_by(year) |>
summarise(count = n()) |>
arrange(desc(count))
noncompliance_per_year
noncompliance_per_year <- compliance |>
filter(site_status == "Noncompliance") |>
group_by(year) |>
summarise(count = n()) |>
arrange(year)
noncompliance_per_year
purple_line <- compliance |>
filter(site_name == "MTA-Purple Line", site_status == "Noncompliance")
purple_line_types <- compliance |>
filter(site_name == "MTA-Purple Line", site_status == "Noncompliance") |>
group_by(inspection_type) |>
summarise(count =n()) |>
arrange(desc(count))
purple_line_types
purple_line <- compliance |>
filter(site_name == "MTA-Purple Line", site_status == "Noncompliance")
purple_line
purple_line_time <- purple_line |>
group_by(year) |>
summarise(count = n()) |>
arrange(year)
purple_line_time
#Wowowowowow the Purple Line has over 500 counts, making it the site with the highest count of reports
names <- compliance |>
#  filter(site_name == "MTA-Purple Line") |>
group_by(site_name) |>
summarise(count =n()) |>
arrange(desc(count))
names
library(tidyverse)
library(dplyr)
library(janitor)
library(stringr)
library(ggplot2)
purple_line_types <- compliance |>
filter(site_name == "MTA-Purple Line", site_status == "Noncompliance") |>
group_by(inspection_type) |>
summarise(count =n()) |>
mutate(percent = count/(sum(count))*100) |>
arrange(desc(count))
purple_line_types
purple_line_types |>
ggplot() +
geom_bar(aes(x=reorder(month,inspection_type), weight=percent), fill="lightblue", color="lightblue") +
coord_flip() +
theme(
plot.title = element_text(margin = margin(b = 5))
) +
labs(
title = "December saw highest percentage of overdose calls",
subtitle = "Most overdose calls in 2023 occurred in December for Prince George's County",
x = "month",
y = "percentage of calls",
caption = "source: Prince George's County EMS")
purple_line_types |>
ggplot() +
geom_bar(aes(x=reorder(inspection_type), weight=percent), fill="lightblue", color="lightblue") +
coord_flip() +
theme(
plot.title = element_text(margin = margin(b = 5))
) +
labs(
title = "December saw highest percentage of overdose calls",
subtitle = "Most overdose calls in 2023 occurred in December for Prince George's County",
x = "month",
y = "percentage of calls",
caption = "source: Prince George's County EMS")
purple_line_types |>
ggplot() +
geom_bar(aes(x=reorder(inspection_type), weight=percent), fill="lightblue", color="lightblue") +
coord_flip() +
theme(
plot.title = element_text(margin = margin(b = 5))
) +
labs(
title = "December saw highest percentage of overdose calls",
subtitle = "Most overdose calls in 2023 occurred in December for Prince George's County",
x = "month",
y = "percentage of calls",
caption = "source: Prince George's County EMS")
purple_line_types |>
ggplot() +
geom_bar(aes(x=inspection_type), weight=percent), fill="lightblue", color="lightblue") +
purple_line_types |>
ggplot() +
geom_bar(aes(x=inspection_type, percent), weight=percent), fill="lightblue", color="lightblue") +
purple_line_types |>
ggplot() +
geom_bar(aes(x = inspection_type, y = percent, weight = percent), fill = "lightblue", color = "lightblue") +
coord_flip() +
theme(
plot.title = element_text(margin = margin(b = 5))
)
purple_line_types |>
ggplot() +
geom_bar(aes(x = inspection_type, y = percent, weight = percent), fill = "lightblue", color = "lightblue") +
coord_flip() +
theme(
plot.title = element_text(margin = margin(b = 5))
)
purple_line_types |>
ggplot()
purple_line_types |>
ggplot() +
geom_bar(aes(x = inspection_type, y = percent, weight = percent), fill = "lightblue", color = "lightblue") +
coord_flip() +
theme(
plot.title = element_text(margin = margin(b = 5))
)
purple_line_types |>
ggplot() +
geom_bar(aes(x = inspection_type, y = percent), fill = "lightblue", color = "lightblue") +
coord_flip() +
theme(
plot.title = element_text(margin = margin(b = 5))
)
purple_line_types |>
ggplot() +
geom_bar(aes(x = inspection_type, weight = percent), fill = "lightblue", color = "lightblue") +
coord_flip() +
theme(
plot.title = element_text(margin = margin(b = 5))
)
purple_line_types |>
ggplot() +
geom_bar(aes(x = inspection_type, percent), weight = percent)), fill = "lightblue", color = "lightblue") +
purple_line_types |>
ggplot() +
geom_bar(aes(x = inspection_type, percent, weight = percent), fill = "lightblue", color = "lightblue") +
coord_flip() +
theme(
plot.title = element_text(margin = margin(b = 5))
)
purple_line_types |>
ggplot() +
geom_bar(aes(x =reorder(inspection_type, percent), weight = percent), fill = "lightblue", color = "lightblue") +
coord_flip() +
theme(
plot.title = element_text(margin = margin(b = 5))
)
library(tidyverse)
library(dplyr)
library(janitor)
library(stringr)
library(ggplot2)
library(ggthemes)
purple_line_types |>
ggplot() +
geom_bar(aes(x =reorder(inspection_type, percent), weight = percent), fill = "lightblue", color = "lightblue") +
coord_flip() +
theme_economist(
plot.title = element_text(margin = margin(b = 5))
)
purple_line_types |>
ggplot() +
geom_bar(aes(x =reorder(inspection_type, percent), weight = percent), fill = "lightblue", color = "lightblue") +
coord_flip() +
theme(
plot.title = element_text(margin = margin(b = 5))
)
purple_line_types |>
ggplot() +
geom_bar(aes(x =reorder(inspection_type, percent), weight = percent), fill = "lightblue", color = "lightblue") +
coord_flip() +
theme_economist() +n
purple_line_types |>
ggplot() +
geom_bar(aes(x =reorder(inspection_type, percent), weight = percent), fill = "lightblue", color = "lightblue") +
coord_flip() +
theme_economist() +
labs(
title="More 911 Overdose Calls in Warmer Months",
x = "month",
y = "total calls",
caption = "source: Baltimore County"
)
purple_line_types |>
ggplot() +
geom_bar(aes(x =reorder(inspection_type, percent), weight = percent), fill = "lightblue", color = "lightblue") +
coord_flip() +
theme_economist_white() +
labs(
title="More 911 Overdose Calls in Warmer Months",
x = "month",
y = "total calls",
caption = "source: Baltimore County"
)
purple_line_types |>
ggplot() +
geom_bar(aes(x =reorder(inspection_type, percent), weight = percent), fill = "lightblue", color = "lightblue") +
coord_flip() +
theme_economist() +
labs(
title="More 911 Overdose Calls in Warmer Months",
x = "month",
y = "total calls",
caption = "source: Baltimore County"
)
knitr::opts_chunk$set(echo = TRUE)
baltco_911_calls_by_month |>
ggplot() +
geom_bar(aes(x=month,total_calls, weight=total_calls)) +
coord_flip() +
theme_economist() +n
baltco_911_calls_by_month |>
ggplot() +
geom_bar(aes(x=reorder(month,total_calls), weight=total_calls)) +
coord_flip() +
theme_economist() +n
baltco_911_calls_by_month |>
ggplot() +
geom_bar(aes(x=reorder(month,total_calls), weight=total_calls)) +
coord_flip() +
theme_economist() +n
purple_line_types |>
ggplot() +
geom_bar(aes(x =reorder(inspection_type, percent), weight = percent), fill = "lightblue", color = "lightblue") +
coord_flip() +
theme_economist() +
labs(
title="More 911 Overdose Calls in Warmer Months",
x = "month",
y = "total calls",
caption = "source: Maryland Department of the Environment"
)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(lubridate)
baltco_911_calls <- read_csv("data/baltco_911_calls.csv")
baltco_911_calls_by_month <- baltco_911_calls |>
mutate(month = month(date, label=TRUE)) |>
group_by(month) |>
summarize(total_calls = n()) |>
arrange(desc(total_calls))
baltco_911_calls_by_month
baltco_911_calls_by_month |>
ggplot()
baltco_911_calls_by_month |>
ggplot() +
geom_bar(aes(x=month, weight=total_calls))
baltco_911_calls_by_month |>
ggplot() +
geom_bar(aes(x=reorder(month,total_calls), weight=total_calls))
baltco_911_calls_by_month |>
ggplot() +
geom_bar(aes(x=reorder(month,total_calls), weight=total_calls)) +
coord_flip()
baltco_911_calls_by_month |>
ggplot() +
geom_bar(aes(x=reorder(month,total_calls), weight=total_calls)) +
coord_flip() +
theme_minimal()
install.packages('ggthemes')
library(ggthemes)
baltco_911_calls_by_month |>
ggplot() +
geom_bar(aes(x=reorder(month,total_calls), weight=total_calls)) +
coord_flip() +
theme_economist()
baltco_911_calls_by_month |>
ggplot() +
geom_bar(aes(x=reorder(month,total_calls), weight=total_calls)) +
coord_flip() +
theme_economist() +n
install.packages("ggthemes")
baltco_911_calls_by_month |>
ggplot() +
geom_bar(aes(x=reorder(month,total_calls), weight=total_calls)) +
coord_flip() +
theme_economist()
labs(
title="More 911 Overdose Calls in Warmer Months",
x = "month",
y = "total calls",
caption = "source: Baltimore County"
)
purple_line_types |>
ggplot() +
geom_bar(aes(x =reorder(inspection_type, percent), weight = percent), fill = "lightblue", color = "lightblue") +
coord_flip() +
theme_economist() +
labs(
title="More 911 Overdose Calls in Warmer Months",
x = "noncompliance types",
y = "percent of Purple Line incidents",
caption = "source: Maryland Department of the Environment"
)
purple_line_types |>
ggplot() +
geom_bar(aes(x =reorder(inspection_type, percent), weight = percent), fill = "lightblue", color = "lightblue") +
coord_flip() +
theme_economist() +
labs(
title="More 911 Overdose Calls in Warmer Months",
x = "noncompliance types",
y = "percent",
caption = "source: Maryland Department of the Environment"
)
purple_line_types |>
ggplot() +
geom_bar(aes(x =reorder(inspection_type, percent), weight = percent), fill = "lightblue", color = "lightblue") +
coord_flip() +
theme_economist() +
labs(
title="Majority of Purple Line's noncompliance were government-issued storm water management inspections",
x = "noncompliance types",
y = "percent",
caption = "source: Maryland Department of the Environment"
)
purple_line_types |>
ggplot() +
geom_bar(aes(x =reorder(inspection_type, percent), weight = percent), fill = "lightblue", color = "lightblue") +
coord_flip() +
theme_economist(
plot.title = element_text(margin = margin(b = 5))
) +
labs(
title="Majority of Purple Line's noncompliance were government-issued storm water management inspections",
x = "noncompliance types",
y = "percent",
caption = "source: Maryland Department of the Environment"
)
purple_line_types |>
ggplot() +
geom_bar(aes(x =reorder(inspection_type, percent), weight = percent), fill = "lightblue", color = "lightblue") +
coord_flip() +
theme_economist(
# plot.title = element_text(margin = margin(b = 5))
) +
labs(
title="Majority of Purple Line's noncompliance were government-issued storm water management inspections",
x = "noncompliance types",
y = "percent",
caption = "source: Maryland Department of the Environment"
)
